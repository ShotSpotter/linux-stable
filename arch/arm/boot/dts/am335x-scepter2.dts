/*
 * Copyright (C) 2015-16 by Tom Riddle, Gener8 Inc http://gener8.net
 * and Robert B. Calhoun, ShotSpotter Inc http://shotspotter.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "scepter2";
	compatible = "ti,am335x-evm", "ti,am33xx";

	cpus {
		cpu@0 {
			cpu0-supply = <&vdd1_reg>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x08000000>; /* 128 MB - SCEPT2 change */
	};

	vbat: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vbat";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
	};


/* Scepter2 leds, gps controls include audio and mmc gpios  */
/* ------------------------------------------------------------------------ */
   	leds {
   		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&user_leds_default>;
		pinctrl-1 = <&user_leds_sleep>;

		compatible = "gpio-leds";

		led@1 {
		      label = "led_grn";
		      gpios = <&gpio1 14 GPIO_ACTIVE_HIGH>;
		      default-state = "on";
		};

		led@2 {
		      label = "led_red";
		      gpios = <&gpio1 15 GPIO_ACTIVE_HIGH>;
		      default-state = "on";
		};
	};

	gpsctls {

   		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&user_gpsctl_default>;
		pinctrl-1 = <&user_gpsctl_sleep>;

		compatible = "gpio-leds";

		gpsctl@1 {
		      label = "gps_oe";
		      gpios = <&gpio3 0 GPIO_ACTIVE_LOW>;
		      default-state = "on";
		};

		gpsctl@2 {
		      label = "gps_rst";
		      gpios = <&gpio3 1 GPIO_ACTIVE_HIGH>;
		      default-state = "off";
		};

		gpsctl@3 {
		      label = "gps_pwron";
		      gpios = <&gpio3 3 GPIO_ACTIVE_LOW>;
		      default-state = "on";
		};

/*  Turn "on" to reset an mmc from software. We don't think you should do this. */

		gpsctl@4 {
			 label = "mmc0_rst";
			 gpios = <&gpio1 12 GPIO_ACTIVE_LOW>;
			 default-state = "off";
		};

		gpsctl@5 {
			 label = "mmc1_rst";
			 gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
			 default-state = "off";
		};

		gpsctl@6 {
		      label = "adc_pwron";
		      gpios = <&gpio2 22 GPIO_ACTIVE_HIGH>;
		      default-state = "on";
		};

		gpsctl@7 {
		      label = "adc_i2c_en";
		      gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
		      default-state = "on";
		};

	};

	cellctls {

   		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&user_cellctl_default>;
		pinctrl-1 = <&user_cellctl_sleep>;
		compatible = "gpio-leds";

/*
 * Fixme: This gpio is called directly in /opt/sst/modem/power-on | -off
 * Telit 910 uses assert timing rather than level to control power so it
 * isn't a good fit for gpio-controlled regulator. Leave out of the dt.
 */
#if 0
		cellctl@1 {
		      label = "cell_on";
		      gpios = <&gpio0 21 GPIO_ACTIVE_LOW>;
		      default-state = "on";
		};
#endif
		cellctl@2 {
		      label = "cell_pwron";
		      gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
		      default-state = "on";
		};

		cellctl@3 {
		      label = "cell_oe";
		      gpios = <&gpio2 23 GPIO_ACTIVE_HIGH>;
		      default-state = "off";
		};

		cellctl@4 {
		      label = "cell_rst";
		      gpios = <&gpio2 25 GPIO_ACTIVE_LOW>;
		      default-state = "on";
		};


	};

/*
 * am33x mcasp cannot generate a 12.288 MHz clock so we have an external
 * clock. Clock drives Wolfson wm8737 which drives mcasp0 as a slave
 */

	clk_audio_fixed: clk_audio_fixed {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <12288000>;
	};

	sound {
	      status = "okay";
	      compatible = "simple-audio-card";
	      simple-audio-card,name = "WM8737";
	      simple-audio-card,widgets =
		"Line", "Line In";
	      simple-audio-card,routing =
		"LINPUT1", "Line In",
		"RINPUT1", "Line In";
	      simple-audio-card,dai-link {
		format = "dsp_b";
		bitclock-master = <&sound_master>;
		frame-master = <&sound_master>;
		cpu {
			sound-dai = <&mcasp0>;
		};
		sound_master: codec {
			sound-dai = <&wm8737>;
			clocks = <&clk_audio_fixed>;
		};
	      };
	};


	pps_0 {
		compatible = "pps-gpio";
		source-name = "ublox_max7";
		source-path = "/dev/ttyO4";
		gpios = <&gpio0 8 GPIO_ACTIVE_HIGH>;
		/* capture-clear; */
	};


/* external pps to gpio0-4 on rcalhoun's board only
        pps_1 {
                compatible = "pps-gpio";
                source-name = "ublox_lea4H";
		source-path = "";
		gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
		interrupts = <96 1>;

	};
*/

};

/* =========================================================================================== */
/* =========================================================================================== */

&am33xx_pinmux {
	pinctrl-names = "default";

	sysboot_pins_default: sysboot_pins_default {
			      pinctrl-single,pins = <
			      0xb8 ( PIN_INPUT | MUX_MODE7 ) /* (T3) lcd_data6.gpio2[12] */
			      0xbc ( PIN_INPUT | MUX_MODE7 ) /* (T4) lcd_data7.gpio2[13] */
			      0xc0 ( PIN_INPUT | MUX_MODE7 ) /* (U1) lcd_data8.gpio2[14] */
			      0xc4 ( PIN_INPUT | MUX_MODE7 ) /* (U2) lcd_data9.gpio2[15] */
			      0xc8 ( PIN_INPUT | MUX_MODE7 ) /* (U3) lcd_data10.gpio2[16] */
			      0xcc ( PIN_INPUT | MUX_MODE7 ) /* (U4) lcd_data11.gpio2[17] */
			      >;
	};

	/* interrupt from pmic */
	pmic_int1_default: pmic_int1_default {
		pinctrl-single,pins = <
			0x8c ( PIN_INPUT | MUX_MODE7 ) /* (V12) gpmc_clk.gpio2[1] */
		>;
	};

        /* wm8737 control */
	wm8737_pins_default: wm8737_pins_default {
		pinctrl-single,pins = <
			0x18c ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (C16) I2C0_SCL.I2C0_SCL */
			0x188 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (C17) I2C0_SDA.I2C0_SDA */
		>;
	};

	/* st lsm303 accelerometer-magnetometer */
	lsm303d_i2c_pins_default: lsm303d_i2c_pins_default {
		pinctrl-single,pins = <
			0x154 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (B17) spi0_d0.I2C2_SCL */
			0x150 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (A17) spi0_sclk.I2C2_SDA */
			0x110 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (J15) gmii1_rxer.gpio3[2] lsm303d INT1*/
			0x118 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (J17) gmii1_rxdv.gpio3[4] lsm303d INT2 */
		>;
	};

	lsm303d_i2c_pins_sleep: lsm303d_i2c_pins_sleep {
		pinctrl-single,pins = <
			0x154 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (B17) spi0_d0.I2C2_SCL */
			0x150 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (A17) spi0_sclk.I2C2_SDA */
			0x110 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (J15) gmii1_rxer.gpio3[2] lsm303d INT1*/
			0x118 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (J17) gmii1_rxdv.gpio3[4] lsm303d INT2 */
		>;
	};


	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};

	uart1_pins_default: pinmux_uart1_pins_default {
		pinctrl-single,pins = <
			0x178 (PIN_INPUT | MUX_MODE0)			/* uart1_ctsn.uart1_ctsn */
			0x17C (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart1_rtsn.uart1_rtsn */
			0x180 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart1_rxd.uart1_rxd */
			0x184 (PIN_OUTPUT_PULLDOWN | MUX_MODE0) 	/* uart1_txd.uart1_txd */
		>;
	};

	uart1_pins_sleep: pinmux_uart1_pins_sleep {
		pinctrl-single,pins = <
			0x178 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x17C (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x180 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x184 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};


/* kpps is not working sensibly with pps-ldisc, make both kpps inputs into gpios */

	uart_gps_pins_default: uart_gps_pins_default {
		pinctrl-single,pins = <
			0x11c ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (J18) gmii1_txd3.uart4_rxd */
			0x120 ( PIN_OUTPUT_PULLDOWN | MUX_MODE3 ) /* (K15) gmii1_txd2.uart4_txd */
			0xd0 ( PIN_INPUT | MUX_MODE7 ) /* (V2) lcd_data12.gpio0[8] */
			0xe8 ( PIN_INPUT | MUX_MODE7 )  /* (V5) lcd_pclk.gpio2[24] */
			0x158 ( PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (B16) spi0_d1.gpio0[4] */
		       	0x168 ( PIN_INPUT | MUX_MODE5 )  /* (E18) uart0_ctsn.timer7 pps_alt on rev3 */
		>;
	};

	/* Optional sleep pin settings. Must manually enter values in the below skeleton. */
	uart_gps_pins_sleep: uart_gps_pins_sleep {
		pinctrl-single,pins = <
			0x11c ( PIN_INPUT | MUX_MODE3 ) /* (J18) gmii1_txd3.uart4_rxd */
			0x120 ( PIN_OUTPUT | MUX_MODE3 ) /* (K15) gmii1_txd2.uart4_txd */
			0xd0 ( PIN_INPUT | MUX_MODE7 ) /* (V2) lcd_data12.gpio0[8] */
			0xe8 ( PIN_INPUT | MUX_MODE7 ) /* (V5) lcd_pclk.gpio2[24] */
			0x158 ( PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* (B16) spi0_d1.gpio0[4] */
		       	0x168 ( PIN_INPUT_PULLDOWN | MUX_MODE7 )  /* (E18) uart0_ctsn.timer7 pps_alt on rev3 */
		>;
	};


/* Scepter 2 changed pins directly here to Slave 2 settings and MII2 per pinmux tool */

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 2 */
		0x40 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (R13) gpmc_a0.gmii2_txen */
		0x44 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (V14) gpmc_a1.gmii2_rxdv */
		0x48 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (U14) gpmc_a2.gmii2_txd3 */
		0x4c ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (T14) gpmc_a3.gmii2_txd2 */
		0x50 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (R14) gpmc_a4.gmii2_txd1 */
		0x54 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (V15) gpmc_a5.gmii2_txd0 */
		0x58 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U15) gpmc_a6.gmii2_txclk */
		0x5c ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (T15) gpmc_a7.gmii2_rxclk */
		0x60 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (V16) gpmc_a8.gmii2_rxd3 */
		0x64 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U16) gpmc_a9.gmii2_rxd2 */
		0x68 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (T16) gpmc_a10.gmii2_rxd1 */
		0x6c ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (V17) gpmc_a11.gmii2_rxd0 */
		0x70 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (T17) gpmc_wait0.gmii2_crs */
		0x74 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U17) gpmc_wpn.gmii2_rxer */
		0x78 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U18) gpmc_be1n.gmii2_col */

		0x9c ( PIN_OUTPUT_PULLUP | MUX_MODE7 ) /* (T6) gpmc_be0n_cle.gpio2[5] ETH_RST */
		0x20 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U10) gpmc_ad8.gpio0[22] ETH_INT */
		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 2 reset value */
		0x40 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (R13) gpmc_a0.gmii2_txen */
		0x44 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (V14) gpmc_a1.gmii2_rxdv */
		0x48 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (U14) gpmc_a2.gmii2_txd3 */
		0x4c ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (T14) gpmc_a3.gmii2_txd2 */
		0x50 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (R14) gpmc_a4.gmii2_txd1 */
		0x54 ( PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (V15) gpmc_a5.gmii2_txd0 */
		0x58 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U15) gpmc_a6.gmii2_txclk */
		0x5c ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (T15) gpmc_a7.gmii2_rxclk */
		0x60 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (V16) gpmc_a8.gmii2_rxd3 */
		0x64 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U16) gpmc_a9.gmii2_rxd2 */
		0x68 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (T16) gpmc_a10.gmii2_rxd1 */
		0x6c ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (V17) gpmc_a11.gmii2_rxd0 */
		0x70 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (T17) gpmc_wait0.gmii2_crs */
		0x74 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U17) gpmc_wpn.gmii2_rxer */
		0x78 ( PIN_INPUT_PULLDOWN | MUX_MODE1 ) /* (U18) gpmc_be1n.gmii2_col */

		0x9c ( PIN_OUTPUT_PULLUP | MUX_MODE7 ) /* (T6) gpmc_be0n_cle.gpio2[5] ETH_RST */
		0x20 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U10) gpmc_ad8.gpio0[22] ETH_INT */
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			0x148 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x14c (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	/* mmc1 in device tree is mmc0 to everyone else */
	mmc1_pins_default: pinmux_mmc1_pins {
		pinctrl-single,pins = <
				    0x100 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G17) mmc0_clk.mmc0_clk */
				    0x104 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G18) mmc0_cmd.mmc0_cmd */
				    0x0fc ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G16) mmc0_dat0.mmc0_dat0 */
				    0x0f8 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G15) mmc0_dat1.mmc0_dat1 */
				    0x0f4 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (F18) mmc0_dat2.mmc0_dat2 */
				    0x0f0 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (F17) mmc0_dat3.mmc0_dat3 */
				    0x138 ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (L16) gmii1_rxd2.mmc0_dat4 */
				    0x134 ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (L17) gmii1_rxd3.mmc0_dat5 */
				    0x130 ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (L18) gmii1_rxclk.mmc0_dat6 */
				    0x12c ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (K18) gmii1_txclk.mmc0_dat7 */
				    /* support "interface board is connected" detection */
				    0x140 ( PIN_INPUT | MUX_MODE7 )        /* (M16) gmii1_rxd0.gpio2[21] */
		>;
	};

	mmc1_pins_sleep: pinmux_mmc1_pins_sleep {
		pinctrl-single,pins = <
				    0x100 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G17) mmc0_clk.mmc0_clk */
				    0x104 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G18) mmc0_cmd.mmc0_cmd */
				    0x0fc ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G16) mmc0_dat0.mmc0_dat0 */
				    0x0f8 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (G15) mmc0_dat1.mmc0_dat1 */
				    0x0f4 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (F18) mmc0_dat2.mmc0_dat2 */
				    0x0f0 ( PIN_INPUT_PULLUP | MUX_MODE0 ) /* (F17) mmc0_dat3.mmc0_dat3 */
				    0x138 ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (L16) gmii1_rxd2.mmc0_dat4 */
				    0x134 ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (L17) gmii1_rxd3.mmc0_dat5 */
				    0x130 ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (L18) gmii1_rxclk.mmc0_dat6 */
				    0x12c ( PIN_INPUT_PULLUP | MUX_MODE3 ) /* (K18) gmii1_txclk.mmc0_dat7 */
				    /* support "interface board is connected" detection */
				    0x140 ( PIN_INPUT | MUX_MODE7 )        /* (M16) gmii1_rxd0.gpio2[21] */
		>;
	};

	/* Device tree mcc2 is mmc1 to everyone else  */
	mmc2_pins_default: pinmux_mmc2_pins_default {
		pinctrl-single,pins = <
				    0x80 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (U9) gpmc_csn1.mmc1_clk */
				    0x84 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (V9) gpmc_csn2.mmc1_cmd */
				    0x00 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (U7) gpmc_ad0.mmc1_dat0 */
				    0x04 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (V7) gpmc_ad1.mmc1_dat1 */
				    0x08 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (R8) gpmc_ad2.mmc1_dat2 */
				    0x0c ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (T8) gpmc_ad3.mmc1_dat3 */
				    0x10 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (U8) gpmc_ad4.mmc1_dat4 */
				    0x14 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (V8) gpmc_ad5.mmc1_dat5 */
				    0x18 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (R9) gpmc_ad6.mmc1_dat6 */
				    0x1c ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (T9) gpmc_ad7.mmc1_dat7 */
		>;
	};

	/* See above, dont fight hardware */
	mmc2_pins_sleep: pinmux_mmc2_pins_sleep {
		pinctrl-single,pins = <
				    0x80 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (U9) gpmc_csn1.mmc1_clk */
				    0x84 ( PIN_INPUT_PULLUP | MUX_MODE2 ) /* (V9) gpmc_csn2.mmc1_cmd */
				    0x00 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (U7) gpmc_ad0.mmc1_dat0 */
				    0x04 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (V7) gpmc_ad1.mmc1_dat1 */
				    0x08 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (R8) gpmc_ad2.mmc1_dat2 */
				    0x0c ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (T8) gpmc_ad3.mmc1_dat3 */
				    0x10 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (U8) gpmc_ad4.mmc1_dat4 */
				    0x14 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (V8) gpmc_ad5.mmc1_dat5 */
				    0x18 ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (R9) gpmc_ad6.mmc1_dat6 */
				    0x1c ( PIN_INPUT_PULLUP | MUX_MODE1 ) /* (T9) gpmc_ad7.mmc1_dat7 */
		>;
	};

	user_leds_default: user_leds_default {
		pinctrl-single,pins = <
 			0x38 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* gpmc_ad14.gpio1_14 scepter2 LED_GRN */
			0x3c (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* gpmc_ad15.gpio1_15 scepter2 LED_RED */
		>;
	};

	user_leds_sleep: user_leds_sleep {
		pinctrl-single,pins = <
 			0x38 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* gpmc_ad14.gpio1_14 scepter2 LED_GRN */
			0x3c (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* gpmc_ad15.gpio1_15 scepter2 LED_RED */
		>;
	};

	user_gpsctl_default: user_gpsctl_default {
		pinctrl-single,pins = <
 			0x108 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* (H16) mii1_col.gpio3[0] 0x108 GPIO3_0 scepter2 GPS_OE */
			0x10c (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* (H17) mii1_crs.gpio3[1] 0x10c GPIO3_1 scepter2 GPS_RST */
			0x114 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* (J16) mii1_txen.gpio3[3] 0x114 GPIO3_3 scepter2 GPS_PWRON */
			0xe0 ( PIN_OUTPUT | MUX_MODE7 ) /* (U5) lcd_vsync.gpio2[22] */

		>;
	};

	user_gpsctl_sleep: user_gpsctl_sleep {
		pinctrl-single,pins = <
 			0x108 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* (H16) mii1_col.gpio3[0] 0x108 GPIO3_0 scepter2 GPS_OE */
			0x10c (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* (H17) mii1_crs.gpio3[1] 0x10c GPIO3_1 scepter2 GPS_RST */
			0x114 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* (J16) mii1_txen.gpio3[3] 0x114 GPIO3_3 scepter2 GPS_PWRON */
			0xe0 ( PIN_OUTPUT | MUX_MODE7 ) /* (U5) lcd_vsync.gpio2[22] */
		>;
	};

	user_cellctl_default: user_cellctl_default {
		pinctrl-single,pins = <
			0x124 ( PIN_OUTPUT | MUX_MODE7 ) /* (K16) gmii1_txd1.gpio0[21] */
			0x128 ( PIN_OUTPUT | MUX_MODE7 ) /* (K17) gmii1_txd0.gpio0[28] */
			0xe4 ( PIN_OUTPUT | MUX_MODE7 ) /* (R5) lcd_hsync.gpio2[23] */
			0xec ( PIN_OUTPUT | MUX_MODE7 ) /* (R6) lcd_ac_bias_en.gpio2[25] */
		>;
	};

	user_cellctl_sleep: user_cellctl_sleep {
		pinctrl-single,pins = <
			0x124 ( PIN_OUTPUT | MUX_MODE7 ) /* (K16) gmii1_txd1.gpio0[21] */
			0x128 ( PIN_OUTPUT | MUX_MODE7 ) /* (K17) gmii1_txd0.gpio0[28] */
			0xe4 ( PIN_OUTPUT | MUX_MODE7 ) /* (R5) lcd_hsync.gpio2[23] */
			0xec ( PIN_OUTPUT | MUX_MODE7 ) /* (R6) lcd_ac_bias_en.gpio2[25] */
		>;
	};



    my_usb_1_pins_default: my_usb_1_pins_default {
        pinctrl-single,pins = <
            0x234 ( PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (F15) USB1_DRVVBUS.USB1_DRVVBUS */
        >;
    };


    /* Optional sleep pin settings. Must manually enter values in the below skeleton. */
    my_usb_1_pins_sleep: my_usb_1_pins_sleep {
        pinctrl-single,pins = <
            0x234 ( PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (F15) USB1_DRVVBUS.USB1_DRVVBUS */
        >;
    };



	am335x_evm_audio_pins: am335x_evm_audio_pins {
		pinctrl-single,pins = <
			0x1a0 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (B12) mcasp0_aclkr.mcasp0_aclkr */
			0x1a4 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (C13) mcasp0_fsr.mcasp0_fsr */
			0x1a8 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (D13) mcasp0_axr1.mcasp0_axr1 */
			/* GPIO I2C tranceiver enable */
			0x28 ( PIN_OUTPUT | MUX_MODE7 ) /* (T11) gpmc_ad10.gpio0[26] */
		>;
	};

	am335x_evm_audio_pins_sleep: am335x_evm_audio_pins_sleep {
		pinctrl-single,pins = <
			0x1a0 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (B12) mcasp0_aclkr.mcasp0_aclkr */
			0x1a4 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (C13) mcasp0_fsr.mcasp0_fsr */
			0x1a8 ( PIN_INPUT_PULLDOWN | MUX_MODE0 ) /* (D13) mcasp0_axr1.mcasp0_axr1 */
			/* GPIO I2C tranceiver enable */
			0x28 ( PIN_OUTPUT | MUX_MODE7 ) /* (T11) gpmc_ad10.gpio0[26] */
		>;
	};

};

/* ===================================================================================== */
/* ===================================================================================== */

/* avoid lockup on boot*/


&rtc {
     clock-names="int-clk";
     ti,hwmods ="disabled";
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&uart1_pins_default>;
	pinctrl-1 = <&uart1_pins_sleep>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&uart_gps_pins_default>;
	pinctrl-1 = <&uart_gps_pins_sleep>;
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&wm8737_pins_default>;

	status = "okay";
	clock-frequency = <400000>;

	tps: tps@2d {
		reg = <0x2d>;
	};

	wm8737: wm8737@1a {
		compatible = "wlf,wm8737";
		reg = <0x1a>;
		status = "okay";
		/* Regulators */
		DCVDD-supply = <&vaux2_reg>;
		DBVDD-supply = <&vaux2_reg>;
		AVDD-supply = <&vaux2_reg>;
		MVDD-supply = <&vaux2_reg>;
		#sound-dai-cells = <0>;
	};

};

&i2c2 {
	pinctrl-names = "default","sleep";
	pinctrl-0 = <&lsm303d_i2c_pins_default>;
	pinctrl-1 = <&lsm303d_i2c_pins_sleep>;
	status = "okay";
	clock-frequency = <400000>;


	lsm303d: lsm303d@1e {
		compatible = "st,lsm303d";
		reg = <0x1e>;
		status = "okay";
		/* fields below are not used in the driver yet */
		st,sensors = "accelerometer","magnetometer";
		st,sensor-names = "lsm303d-acc","lsm303d-mag";
		st,drdy-gpios = <&gpio3 2 GPIO_ACTIVE_LOW>, <&gpio3 4 GPIO_ACTIVE_LOW>;
		st,drdy-int-pins = <1>,<2>;
	};

};

&lsm303d {

};

&usb {
    status = "okay";
};

&usb_ctrl_mod {
    status = "okay";
};

/* usb0 used for sw load via RDNIS */
&usb0_phy {
    status = "okay";
};

&usb0 {
    status = "okay";
    dr_mode = "peripheral";
};

/* usb1 used for modem interface */
&usb1_phy {
    status = "okay";
};

&usb1 {
    status = "okay";
    dr_mode = "host";
};

&cppi41dma  {
    status = "okay";
};

/* ------------------------------------------------------------------------ */

#include "tps65910.dtsi"

&mcasp0 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&am335x_evm_audio_pins>;
	pinctrl-1 = <&am335x_evm_audio_pins_sleep>;

	status = "okay";

	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	/* 4 serializers */
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX - 0 2 0 0 */
		0 2 0 0
	>;
	tx-num-evt = <32>;
	rx-num-evt = <32>;
	#sound-dai-cells = <0>;
};

&tps {

/* PMIC Inputs 5V_DIG net on schematic */
	vcc1-supply = <&vbat>;
	vcc2-supply = <&vbat>;
	vcc3-supply = <&vbat>;
	vcc4-supply = <&vbat>;
	vcc5-supply = <&vbat>;
	vcc6-supply = <&vbat>;
	vcc7-supply = <&vbat>;
	vccio-supply = <&vbat>;

	regulators {
		vrtc_reg: regulator@0 {
			regulator-always-on;
		};

		vio_reg: regulator@1 {
			regulator-always-on;
		};

		vdd1_reg: regulator@2 {
			/* VDD_MPU voltage limits 0.95V - 1.325V with +/-4% tolerance */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1378000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd2_reg: regulator@3 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd3_reg: regulator@4 {
			regulator-always-on;
		};

		vdig1_reg: regulator@5 {
			regulator-always-on;
		};

		vdig2_reg: regulator@6 {
			regulator-always-on;
		};

		/* Here are the std PMIC reg outputs */
		vpll_reg: regulator@7 {
			regulator-always-on;
		};

		vdac_reg: regulator@8 {
			regulator-always-on;
		};

		vaux1_reg: regulator@9 {
			regulator-always-on;
		};

		vaux2_reg: regulator@10 {
			regulator-always-on;
		};

		vaux33_reg: regulator@11 {
			regulator-always-on;
		};

		vmmc_reg: regulator@12 {
		/*	Scepter 2 has fixed 3.3v */
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
	};
};

&mac {
    status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
};

&davinci_mdio {
    status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
};

/* Scepter 2 use only one emac, note that forcing emac1 to mdio addr 0 will
 properly direct MII2 to the correct and only available phy */

&cpsw_emac0 {
    status = "ok";
	phy_id = <&davinci_mdio>, <1>;
	phy-mode = "mii";
};

&cpsw_emac1 {
    status = "ok";
	phy_id = <&davinci_mdio>, <0>;
	phy-mode = "mii";
};

&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
	};
};

&mmc1 {	status = "okay";
	compatible = "ti,am33xx-hsmmc"; /* very similar to ti,omap4-hsmmc */
	max-frequency = <48000000>;
	vmmc-supply = <&vmmc_reg>;
	bus-width = <8>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_sleep>;
	ti,non-removable;
	disable-wp;
};

&mmc2 {
	compatible = "ti,am33xx-hsmmc"; /* very similar to ti,omap4-hsmmc */
	max-frequency = <48000000>;
	vmmc-supply = <&vmmc_reg>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc2_pins_default>;
	pinctrl-1 = <&mmc2_pins_sleep>;
	bus-width = <8>;
	status = "okay";
	ti,non-removable;
	disable-wp;
};

&sham {
	status = "okay";
};

&aes {
	status = "okay";
};

&wkup_m3 {
	ti,scale-data-fw = "am335x-evm-scale-data.bin";
};
